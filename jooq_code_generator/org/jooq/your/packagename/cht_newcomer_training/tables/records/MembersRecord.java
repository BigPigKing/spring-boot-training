/*
 * This file is generated by jOOQ.
 */
package org.jooq.your.packagename.cht_newcomer_training.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.your.packagename.cht_newcomer_training.enums.MembersRegion;
import org.jooq.your.packagename.cht_newcomer_training.tables.Members;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MembersRecord extends UpdatableRecordImpl<MembersRecord> implements Record4<Integer, String, MembersRegion, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>cht_newcomer_training.members.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>cht_newcomer_training.members.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>cht_newcomer_training.members.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cht_newcomer_training.members.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cht_newcomer_training.members.region</code>.
     */
    public void setRegion(MembersRegion value) {
        set(2, value);
    }

    /**
     * Getter for <code>cht_newcomer_training.members.region</code>.
     */
    public MembersRegion getRegion() {
        return (MembersRegion) get(2);
    }

    /**
     * Setter for <code>cht_newcomer_training.members.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>cht_newcomer_training.members.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, MembersRegion, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, MembersRegion, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Members.MEMBERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Members.MEMBERS.NAME;
    }

    @Override
    public Field<MembersRegion> field3() {
        return Members.MEMBERS.REGION;
    }

    @Override
    public Field<Integer> field4() {
        return Members.MEMBERS.USER_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public MembersRegion component3() {
        return getRegion();
    }

    @Override
    public Integer component4() {
        return getUserId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public MembersRegion value3() {
        return getRegion();
    }

    @Override
    public Integer value4() {
        return getUserId();
    }

    @Override
    public MembersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MembersRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public MembersRecord value3(MembersRegion value) {
        setRegion(value);
        return this;
    }

    @Override
    public MembersRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public MembersRecord values(Integer value1, String value2, MembersRegion value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MembersRecord
     */
    public MembersRecord() {
        super(Members.MEMBERS);
    }

    /**
     * Create a detached, initialised MembersRecord
     */
    public MembersRecord(Integer id, String name, MembersRegion region, Integer userId) {
        super(Members.MEMBERS);

        setId(id);
        setName(name);
        setRegion(region);
        setUserId(userId);
        resetChangedOnNotNull();
    }
}
