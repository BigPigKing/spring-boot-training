/*
 * This file is generated by jOOQ.
 */
package cht.eric.models.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "`order`",
    schema = "cht_newcomer_training"
)
public class Order implements Serializable {

    private static final long serialVersionUID = 1L;

    private String id;
    private LocalDate orderDate;
    private LocalDate shipDate;
    private String customerIdNumber;
    private String customerName;
    private String country;
    private String city;
    private String state;
    private Integer postalCode;
    private String productIdNumber;
    private String category;
    private String subCategory;
    private String productName;
    private Double sales;
    private Integer quantity;
    private Double discount;
    private Double profit;
    private Byte isReturned;
    private String shipMode;
    private String region;
    private String segment;

    public Order() {}

    public Order(Order value) {
        this.id = value.id;
        this.orderDate = value.orderDate;
        this.shipDate = value.shipDate;
        this.customerIdNumber = value.customerIdNumber;
        this.customerName = value.customerName;
        this.country = value.country;
        this.city = value.city;
        this.state = value.state;
        this.postalCode = value.postalCode;
        this.productIdNumber = value.productIdNumber;
        this.category = value.category;
        this.subCategory = value.subCategory;
        this.productName = value.productName;
        this.sales = value.sales;
        this.quantity = value.quantity;
        this.discount = value.discount;
        this.profit = value.profit;
        this.isReturned = value.isReturned;
        this.shipMode = value.shipMode;
        this.region = value.region;
        this.segment = value.segment;
    }

    public Order(
        String id,
        LocalDate orderDate,
        LocalDate shipDate,
        String customerIdNumber,
        String customerName,
        String country,
        String city,
        String state,
        Integer postalCode,
        String productIdNumber,
        String category,
        String subCategory,
        String productName,
        Double sales,
        Integer quantity,
        Double discount,
        Double profit,
        Byte isReturned,
        String shipMode,
        String region,
        String segment
    ) {
        this.id = id;
        this.orderDate = orderDate;
        this.shipDate = shipDate;
        this.customerIdNumber = customerIdNumber;
        this.customerName = customerName;
        this.country = country;
        this.city = city;
        this.state = state;
        this.postalCode = postalCode;
        this.productIdNumber = productIdNumber;
        this.category = category;
        this.subCategory = subCategory;
        this.productName = productName;
        this.sales = sales;
        this.quantity = quantity;
        this.discount = discount;
        this.profit = profit;
        this.isReturned = isReturned;
        this.shipMode = shipMode;
        this.region = region;
        this.segment = segment;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, length = 14)
    @NotNull
    @Size(max = 14)
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.id</code>.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.order_date</code>.
     */
    @Column(name = "order_date", nullable = false)
    @NotNull
    public LocalDate getOrderDate() {
        return this.orderDate;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.order_date</code>.
     */
    public void setOrderDate(LocalDate orderDate) {
        this.orderDate = orderDate;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.ship_date</code>.
     */
    @Column(name = "ship_date", nullable = false)
    @NotNull
    public LocalDate getShipDate() {
        return this.shipDate;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.ship_date</code>.
     */
    public void setShipDate(LocalDate shipDate) {
        this.shipDate = shipDate;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.customer_id_number</code>.
     */
    @Column(name = "customer_id_number", nullable = false, length = 8)
    @NotNull
    @Size(max = 8)
    public String getCustomerIdNumber() {
        return this.customerIdNumber;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.customer_id_number</code>.
     */
    public void setCustomerIdNumber(String customerIdNumber) {
        this.customerIdNumber = customerIdNumber;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.customer_name</code>.
     */
    @Column(name = "customer_name", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getCustomerName() {
        return this.customerName;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.customer_name</code>.
     */
    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.country</code>.
     */
    @Column(name = "country", nullable = false, length = 300)
    @NotNull
    @Size(max = 300)
    public String getCountry() {
        return this.country;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.country</code>.
     */
    public void setCountry(String country) {
        this.country = country;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.city</code>.
     */
    @Column(name = "city", nullable = false, length = 300)
    @NotNull
    @Size(max = 300)
    public String getCity() {
        return this.city;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.city</code>.
     */
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.state</code>.
     */
    @Column(name = "state", nullable = false, length = 300)
    @NotNull
    @Size(max = 300)
    public String getState() {
        return this.state;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.state</code>.
     */
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.postal_code</code>.
     */
    @Column(name = "postal_code", nullable = false)
    @NotNull
    public Integer getPostalCode() {
        return this.postalCode;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.postal_code</code>.
     */
    public void setPostalCode(Integer postalCode) {
        this.postalCode = postalCode;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.product_id_number</code>.
     */
    @Column(name = "product_id_number", nullable = false, length = 15)
    @NotNull
    @Size(max = 15)
    public String getProductIdNumber() {
        return this.productIdNumber;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.product_id_number</code>.
     */
    public void setProductIdNumber(String productIdNumber) {
        this.productIdNumber = productIdNumber;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.category</code>.
     */
    @Column(name = "category", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getCategory() {
        return this.category;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.category</code>.
     */
    public void setCategory(String category) {
        this.category = category;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.sub_category</code>.
     */
    @Column(name = "sub_category", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getSubCategory() {
        return this.subCategory;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.sub_category</code>.
     */
    public void setSubCategory(String subCategory) {
        this.subCategory = subCategory;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.product_name</code>.
     */
    @Column(name = "product_name", nullable = false, length = 300)
    @NotNull
    @Size(max = 300)
    public String getProductName() {
        return this.productName;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.product_name</code>.
     */
    public void setProductName(String productName) {
        this.productName = productName;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.sales</code>.
     */
    @Column(name = "sales", nullable = false)
    @NotNull
    public Double getSales() {
        return this.sales;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.sales</code>.
     */
    public void setSales(Double sales) {
        this.sales = sales;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.quantity</code>.
     */
    @Column(name = "quantity", nullable = false)
    @NotNull
    public Integer getQuantity() {
        return this.quantity;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.quantity</code>.
     */
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.discount</code>.
     */
    @Column(name = "discount", nullable = false)
    @NotNull
    public Double getDiscount() {
        return this.discount;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.discount</code>.
     */
    public void setDiscount(Double discount) {
        this.discount = discount;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.profit</code>.
     */
    @Column(name = "profit", nullable = false)
    @NotNull
    public Double getProfit() {
        return this.profit;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.profit</code>.
     */
    public void setProfit(Double profit) {
        this.profit = profit;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.is_returned</code>.
     */
    @Column(name = "is_returned", nullable = false)
    @NotNull
    public Byte getIsReturned() {
        return this.isReturned;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.is_returned</code>.
     */
    public void setIsReturned(Byte isReturned) {
        this.isReturned = isReturned;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.ship_mode</code>.
     */
    @Column(name = "ship_mode", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getShipMode() {
        return this.shipMode;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.ship_mode</code>.
     */
    public void setShipMode(String shipMode) {
        this.shipMode = shipMode;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.region</code>.
     */
    @Column(name = "region", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getRegion() {
        return this.region;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.region</code>.
     */
    public void setRegion(String region) {
        this.region = region;
    }

    /**
     * Getter for <code>cht_newcomer_training.order.segment</code>.
     */
    @Column(name = "segment", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getSegment() {
        return this.segment;
    }

    /**
     * Setter for <code>cht_newcomer_training.order.segment</code>.
     */
    public void setSegment(String segment) {
        this.segment = segment;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Order other = (Order) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.orderDate == null) {
            if (other.orderDate != null)
                return false;
        }
        else if (!this.orderDate.equals(other.orderDate))
            return false;
        if (this.shipDate == null) {
            if (other.shipDate != null)
                return false;
        }
        else if (!this.shipDate.equals(other.shipDate))
            return false;
        if (this.customerIdNumber == null) {
            if (other.customerIdNumber != null)
                return false;
        }
        else if (!this.customerIdNumber.equals(other.customerIdNumber))
            return false;
        if (this.customerName == null) {
            if (other.customerName != null)
                return false;
        }
        else if (!this.customerName.equals(other.customerName))
            return false;
        if (this.country == null) {
            if (other.country != null)
                return false;
        }
        else if (!this.country.equals(other.country))
            return false;
        if (this.city == null) {
            if (other.city != null)
                return false;
        }
        else if (!this.city.equals(other.city))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.postalCode == null) {
            if (other.postalCode != null)
                return false;
        }
        else if (!this.postalCode.equals(other.postalCode))
            return false;
        if (this.productIdNumber == null) {
            if (other.productIdNumber != null)
                return false;
        }
        else if (!this.productIdNumber.equals(other.productIdNumber))
            return false;
        if (this.category == null) {
            if (other.category != null)
                return false;
        }
        else if (!this.category.equals(other.category))
            return false;
        if (this.subCategory == null) {
            if (other.subCategory != null)
                return false;
        }
        else if (!this.subCategory.equals(other.subCategory))
            return false;
        if (this.productName == null) {
            if (other.productName != null)
                return false;
        }
        else if (!this.productName.equals(other.productName))
            return false;
        if (this.sales == null) {
            if (other.sales != null)
                return false;
        }
        else if (!this.sales.equals(other.sales))
            return false;
        if (this.quantity == null) {
            if (other.quantity != null)
                return false;
        }
        else if (!this.quantity.equals(other.quantity))
            return false;
        if (this.discount == null) {
            if (other.discount != null)
                return false;
        }
        else if (!this.discount.equals(other.discount))
            return false;
        if (this.profit == null) {
            if (other.profit != null)
                return false;
        }
        else if (!this.profit.equals(other.profit))
            return false;
        if (this.isReturned == null) {
            if (other.isReturned != null)
                return false;
        }
        else if (!this.isReturned.equals(other.isReturned))
            return false;
        if (this.shipMode == null) {
            if (other.shipMode != null)
                return false;
        }
        else if (!this.shipMode.equals(other.shipMode))
            return false;
        if (this.region == null) {
            if (other.region != null)
                return false;
        }
        else if (!this.region.equals(other.region))
            return false;
        if (this.segment == null) {
            if (other.segment != null)
                return false;
        }
        else if (!this.segment.equals(other.segment))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.orderDate == null) ? 0 : this.orderDate.hashCode());
        result = prime * result + ((this.shipDate == null) ? 0 : this.shipDate.hashCode());
        result = prime * result + ((this.customerIdNumber == null) ? 0 : this.customerIdNumber.hashCode());
        result = prime * result + ((this.customerName == null) ? 0 : this.customerName.hashCode());
        result = prime * result + ((this.country == null) ? 0 : this.country.hashCode());
        result = prime * result + ((this.city == null) ? 0 : this.city.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.postalCode == null) ? 0 : this.postalCode.hashCode());
        result = prime * result + ((this.productIdNumber == null) ? 0 : this.productIdNumber.hashCode());
        result = prime * result + ((this.category == null) ? 0 : this.category.hashCode());
        result = prime * result + ((this.subCategory == null) ? 0 : this.subCategory.hashCode());
        result = prime * result + ((this.productName == null) ? 0 : this.productName.hashCode());
        result = prime * result + ((this.sales == null) ? 0 : this.sales.hashCode());
        result = prime * result + ((this.quantity == null) ? 0 : this.quantity.hashCode());
        result = prime * result + ((this.discount == null) ? 0 : this.discount.hashCode());
        result = prime * result + ((this.profit == null) ? 0 : this.profit.hashCode());
        result = prime * result + ((this.isReturned == null) ? 0 : this.isReturned.hashCode());
        result = prime * result + ((this.shipMode == null) ? 0 : this.shipMode.hashCode());
        result = prime * result + ((this.region == null) ? 0 : this.region.hashCode());
        result = prime * result + ((this.segment == null) ? 0 : this.segment.hashCode());
        return result;
    }
}
